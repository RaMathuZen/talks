#+title: distrobox - a wrapper over docker/podman
#+author: Annamalai N

#+REVEAL_ROOT: https://cdn.jsdelivr.net/npm/reveal.js
#+REVEAL_PLUGINS: (highlight)
#+REVEAL_HLEVEL: 2
#+REVEAL_THEME: serif
#+REVEAL_MARGIN: 0.04
#+REVEAL_MIN_SCALE: 0.2
#+REVEAL_MAX_SCALE: 2.0
#+REVEAL_INIT_OPTIONS: slideNumber:true
#+OPTIONS: timestamp:nil toc:1 num:nil

* What

- to create and start containers *highly integrated with the hosts* with access to
  - the user’s home directory
  - networking
  - removable devices (like USB sticks), etc.
    
* Why 
* How 
* When
* Why I had to use 
* Demo



- Using containers for development environments in the terminal is already greatly tackled by the Container Toolbx project, but you may sometimes have the necessity of a specific Linux distribution, or to export an application or a service from inside to the container, back to the host.

- any distro userland to any other distro

- "Isolation and sandboxing are not the main aims of the project, on the contrary it aims to tightly integrate the container with the host."

- 

    Distrobox is a series of POSIX shell scripts, making compatibility a primary feature, whereas Toolbox is a Go program that is geared toward Fedora systems.

    One of Distrobox’s primary goals it to support the containerization of “any” Linux environment.


- You can even run entire desktop environments on operating systems that never supported them.

- When you run an application in Distrobox, it mainly sees your actual home directory. Outside of your home directory, it sees the container’s filesystem.

- vs toolbox
  - a simplified way using POSIX sh and aiming at broader compatibility.

- vs dockman/podman

- It is divided into 12 commands:

    distrobox-assemble - creates and destroy containers based on a config file
    distrobox-create - creates the container
    distrobox-enter - to enter the container
    distrobox-ephemeral - create a temporal container, destroy it when exiting the shell
    distrobox-list - to list containers created with distrobox
    distrobox-rm - to delete a container created with distrobox
    distrobox-stop - to stop a running container created with distrobox
    distrobox-upgrade - to upgrade one or more running containers created with distrobox at once
    distrobox-generate-entry - to create an entry of a created container in the applications list
    distrobox-init - the entrypoint of the container (not meant to be used manually)
    distrobox-export - it is meant to be used inside the container, useful to export apps and services from the container to the host
    distrobox-host-exec - to run commands/programs from the host, while inside of the container

- It also includes a little wrapper to launch commands with distrobox COMMAND instead of calling the single files.

- What ? Why ? When ? How ?

- Demo 

- Try inside a VM ?
  
* References

- [[https://distrobox.it/][distrobox - Home Page]]
  
- [[https://cloudyday.tech.blog/2022/05/14/distrobox-is-awesome/][Distrobox is Awesome - JSEvans]]
